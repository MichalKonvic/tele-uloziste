import React, { useState } from 'react';
import Image from 'next/image'
import Head from 'next/head'
import { NextPage } from 'next';
import { motion } from 'framer-motion';
import EmailGrabber from '../components/LoginPage/EmailGrabber';
const LoginPage:NextPage = () => {
    
    const [errorMessage, setErrorMessage] = useState("");
    const handleSubmit = (
            e : React.MouseEvent<HTMLInputElement,MouseEvent>,
            inputRef: React.MutableRefObject<HTMLInputElement | null>
    ) => {
        e.preventDefault();
        // Cleans last errorMessages
        setErrorMessage("");


        // TODO Validation

        if(inputRef.current?.value === "michal.konvic"){
            // valid style
            inputRef.current?.classList.add("text-green-400");
        }

        if(inputRef.current?.value === "x"){
            // invalid style
            inputRef.current.classList.add("text-red-400");

        }
    }

    const [formTitle, setFormTitle] = useState("Tele Cloud");
    const [formSection, setFormSection] = useState(<EmailGrabber handleSubmit={handleSubmit}/>);

    return (
        <div className='h-screen w-screen flex justify-center items-center bg-slate-200'>
        <Head>
            <title>Tele Cloud</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.svg" />
        </Head>
            <form className='duration-400 flex items-center flex-col w-full h-full justify-center bg-white md:w-fit md:h-fit md:px-10 md:py-14 md:border md:border-gray-300 md:shadow-xl md:rounded-lg overflow-hidden'>
                <div className='flex items-center justify-center gap-5 overflow-hidden'>
                    <Image src="/favicon.svg" alt='T Icon' width={50} height={50} />
                    <motion.h1
                        initial={{y: 50}}
                        animate={{y:0}}
                        exit={{y: -50}}
                        transition={{duration:0.2,ease:"easeOut",delay:0.5}}
                        className='text-5xl font-bold text-gray-700'>{formTitle}</motion.h1>
                </div>
                <div className='mt-2 w-full mb-5 flex justify-center'>
                    <ErrorMessage message={errorMessage}/>
                </div>
                {formSection}
            </form>
        </div>
    );
};

interface errorMessageI{
    message: string
}

const ErrorMessage = ({message}: errorMessageI) => {
    if(message === "") return null;
    return(
        <React.Fragment>
            <motion.p
                initial={{x: 50}}
                animate={{x: 0}}
                exit={{opacity:0}}
                className='text-center w-64 text-red-600'
            >
                {message}
            </motion.p>
        </React.Fragment>
    );
}

export default LoginPage;
